//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DeGreenrobotEventEventBus.h"
#include "DeGreenrobotEventUtilExceptionToResourceMapping.h"
#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/util/Log.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation DeGreenrobotEventUtilExceptionToResourceMapping

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventUtilExceptionToResourceMapping_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangInteger *)mapThrowableWithNSException:(NSException *)throwable {
  NSException *throwableToCheck = throwable;
  jint depthToGo = 20;
  while (true) {
    JavaLangInteger *resId = [self mapThrowableFlatWithNSException:throwableToCheck];
    if (resId != nil) {
      return resId;
    }
    else {
      throwableToCheck = [((NSException *) nil_chk(throwableToCheck)) getCause];
      depthToGo--;
      if (depthToGo <= 0 || throwableToCheck == throwable || throwableToCheck == nil) {
        AndroidUtilLog_dWithNSString_withNSString_(JreLoadStatic(DeGreenrobotEventEventBus, TAG), JreStrcat("$@", @"No specific message ressource ID found for ", throwable));
        return nil;
      }
    }
  }
}

- (JavaLangInteger *)mapThrowableFlatWithNSException:(NSException *)throwable {
  IOSClass *throwableClass = [((NSException *) nil_chk(throwable)) java_getClass];
  JavaLangInteger *resId = [((id<JavaUtilMap>) nil_chk(throwableToMsgIdMap_)) getWithId:throwableClass];
  if (resId == nil) {
    IOSClass *closestClass = nil;
    id<JavaUtilSet> mappings = [throwableToMsgIdMap_ entrySet];
    for (id<JavaUtilMap_Entry> __strong mapping in nil_chk(mappings)) {
      IOSClass *candidate = [((id<JavaUtilMap_Entry>) nil_chk(mapping)) getKey];
      if ([((IOSClass *) nil_chk(candidate)) isAssignableFrom:throwableClass]) {
        if (closestClass == nil || [closestClass isAssignableFrom:candidate]) {
          closestClass = candidate;
          resId = [mapping getValue];
        }
      }
    }
  }
  return resId;
}

- (DeGreenrobotEventUtilExceptionToResourceMapping *)addMappingWithIOSClass:(IOSClass *)clazz
                                                                    withInt:(jint)msgId {
  [((id<JavaUtilMap>) nil_chk(throwableToMsgIdMap_)) putWithId:clazz withId:JavaLangInteger_valueOfWithInt_(msgId)];
  return self;
}

- (void)dealloc {
  RELEASE_(throwableToMsgIdMap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x4, 2, 1, -1, -1, -1, -1 },
    { NULL, "LDeGreenrobotEventUtilExceptionToResourceMapping;", 0x1, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mapThrowableWithNSException:);
  methods[2].selector = @selector(mapThrowableFlatWithNSException:);
  methods[3].selector = @selector(addMappingWithIOSClass:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "throwableToMsgIdMap_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x11, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "mapThrowable", "LNSException;", "mapThrowableFlat", "addMapping", "LIOSClass;I", "(Ljava/lang/Class<+Ljava/lang/Throwable;>;I)Lde/greenrobot/event/util/ExceptionToResourceMapping;", "Ljava/util/Map<Ljava/lang/Class<+Ljava/lang/Throwable;>;Ljava/lang/Integer;>;" };
  static const J2ObjcClassInfo _DeGreenrobotEventUtilExceptionToResourceMapping = { "ExceptionToResourceMapping", "de.greenrobot.event.util", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_DeGreenrobotEventUtilExceptionToResourceMapping;
}

@end

void DeGreenrobotEventUtilExceptionToResourceMapping_init(DeGreenrobotEventUtilExceptionToResourceMapping *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->throwableToMsgIdMap_, new_JavaUtilHashMap_init());
}

DeGreenrobotEventUtilExceptionToResourceMapping *new_DeGreenrobotEventUtilExceptionToResourceMapping_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventUtilExceptionToResourceMapping, init)
}

DeGreenrobotEventUtilExceptionToResourceMapping *create_DeGreenrobotEventUtilExceptionToResourceMapping_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventUtilExceptionToResourceMapping, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventUtilExceptionToResourceMapping)
