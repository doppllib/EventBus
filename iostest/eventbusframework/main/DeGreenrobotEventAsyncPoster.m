//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DeGreenrobotEventAsyncPoster.h"
#include "DeGreenrobotEventEventBus.h"
#include "DeGreenrobotEventPendingPost.h"
#include "DeGreenrobotEventPendingPostQueue.h"
#include "DeGreenrobotEventSubscription.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/concurrent/ExecutorService.h"

@interface DeGreenrobotEventAsyncPoster () {
 @public
  DeGreenrobotEventPendingPostQueue *queue_;
  __unsafe_unretained DeGreenrobotEventEventBus *eventBus_;
}

@end

J2OBJC_FIELD_SETTER(DeGreenrobotEventAsyncPoster, queue_, DeGreenrobotEventPendingPostQueue *)

@implementation DeGreenrobotEventAsyncPoster

- (instancetype)initWithDeGreenrobotEventEventBus:(DeGreenrobotEventEventBus *)eventBus {
  DeGreenrobotEventAsyncPoster_initWithDeGreenrobotEventEventBus_(self, eventBus);
  return self;
}

- (void)enqueueWithDeGreenrobotEventSubscription:(DeGreenrobotEventSubscription *)subscription
                                          withId:(id)event {
  DeGreenrobotEventPendingPost *pendingPost = DeGreenrobotEventPendingPost_obtainPendingPostWithDeGreenrobotEventSubscription_withId_(subscription, event);
  [((DeGreenrobotEventPendingPostQueue *) nil_chk(queue_)) enqueueWithDeGreenrobotEventPendingPost:pendingPost];
  [((id<JavaUtilConcurrentExecutorService>) nil_chk([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) getExecutorService])) executeWithJavaLangRunnable:self];
}

- (void)run {
  DeGreenrobotEventPendingPost *pendingPost = [((DeGreenrobotEventPendingPostQueue *) nil_chk(queue_)) poll];
  if (pendingPost == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"No pending post available");
  }
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) invokeSubscriberWithDeGreenrobotEventPendingPost:pendingPost];
}

- (void)__javaClone:(DeGreenrobotEventAsyncPoster *)original {
  [super __javaClone:original];
  [eventBus_ release];
}

- (void)dealloc {
  RELEASE_(queue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventEventBus:);
  methods[1].selector = @selector(enqueueWithDeGreenrobotEventSubscription:withId:);
  methods[2].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "queue_", "LDeGreenrobotEventPendingPostQueue;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "eventBus_", "LDeGreenrobotEventEventBus;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LDeGreenrobotEventEventBus;", "enqueue", "LDeGreenrobotEventSubscription;LNSObject;" };
  static const J2ObjcClassInfo _DeGreenrobotEventAsyncPoster = { "AsyncPoster", "de.greenrobot.event", ptrTable, methods, fields, 7, 0x0, 3, 2, -1, -1, -1, -1, -1 };
  return &_DeGreenrobotEventAsyncPoster;
}

@end

void DeGreenrobotEventAsyncPoster_initWithDeGreenrobotEventEventBus_(DeGreenrobotEventAsyncPoster *self, DeGreenrobotEventEventBus *eventBus) {
  NSObject_init(self);
  self->eventBus_ = eventBus;
  JreStrongAssignAndConsume(&self->queue_, new_DeGreenrobotEventPendingPostQueue_init());
}

DeGreenrobotEventAsyncPoster *new_DeGreenrobotEventAsyncPoster_initWithDeGreenrobotEventEventBus_(DeGreenrobotEventEventBus *eventBus) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventAsyncPoster, initWithDeGreenrobotEventEventBus_, eventBus)
}

DeGreenrobotEventAsyncPoster *create_DeGreenrobotEventAsyncPoster_initWithDeGreenrobotEventEventBus_(DeGreenrobotEventEventBus *eventBus) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventAsyncPoster, initWithDeGreenrobotEventEventBus_, eventBus)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventAsyncPoster)
