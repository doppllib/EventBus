//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DeGreenrobotEventSubscriberMethod.h"
#include "DeGreenrobotEventSubscription.h"
#include "J2ObjC_source.h"

@implementation DeGreenrobotEventSubscription

- (instancetype)initWithId:(id)subscriber
withDeGreenrobotEventSubscriberMethod:(DeGreenrobotEventSubscriberMethod *)subscriberMethod
                   withInt:(jint)priority {
  DeGreenrobotEventSubscription_initWithId_withDeGreenrobotEventSubscriberMethod_withInt_(self, subscriber, subscriberMethod, priority);
  return self;
}

- (jboolean)isEqual:(id)other {
  if ([other isKindOfClass:[DeGreenrobotEventSubscription class]]) {
    DeGreenrobotEventSubscription *otherSubscription = (DeGreenrobotEventSubscription *) cast_chk(other, [DeGreenrobotEventSubscription class]);
    return subscriber_ == ((DeGreenrobotEventSubscription *) nil_chk(otherSubscription))->subscriber_ && [((DeGreenrobotEventSubscriberMethod *) nil_chk(subscriberMethod_)) isEqual:otherSubscription->subscriberMethod_];
  }
  else {
    return false;
  }
}

- (NSUInteger)hash {
  return ((jint) [nil_chk(subscriber_) hash]) + ((jint) [((NSString *) nil_chk(((DeGreenrobotEventSubscriberMethod *) nil_chk(subscriberMethod_))->methodString_)) hash]);
}

- (void)dealloc {
  RELEASE_(subscriber_);
  RELEASE_(subscriberMethod_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withDeGreenrobotEventSubscriberMethod:withInt:);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subscriber_", "LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "subscriberMethod_", "LDeGreenrobotEventSubscriberMethod;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "priority_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "active_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LDeGreenrobotEventSubscriberMethod;I", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _DeGreenrobotEventSubscription = { "Subscription", "de.greenrobot.event", ptrTable, methods, fields, 7, 0x10, 3, 4, -1, -1, -1, -1, -1 };
  return &_DeGreenrobotEventSubscription;
}

@end

void DeGreenrobotEventSubscription_initWithId_withDeGreenrobotEventSubscriberMethod_withInt_(DeGreenrobotEventSubscription *self, id subscriber, DeGreenrobotEventSubscriberMethod *subscriberMethod, jint priority) {
  NSObject_init(self);
  JreStrongAssign(&self->subscriber_, subscriber);
  JreStrongAssign(&self->subscriberMethod_, subscriberMethod);
  self->priority_ = priority;
  JreAssignVolatileBoolean(&self->active_, true);
}

DeGreenrobotEventSubscription *new_DeGreenrobotEventSubscription_initWithId_withDeGreenrobotEventSubscriberMethod_withInt_(id subscriber, DeGreenrobotEventSubscriberMethod *subscriberMethod, jint priority) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventSubscription, initWithId_withDeGreenrobotEventSubscriberMethod_withInt_, subscriber, subscriberMethod, priority)
}

DeGreenrobotEventSubscription *create_DeGreenrobotEventSubscription_initWithId_withDeGreenrobotEventSubscriberMethod_withInt_(id subscriber, DeGreenrobotEventSubscriberMethod *subscriberMethod, jint priority) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventSubscription, initWithId_withDeGreenrobotEventSubscriberMethod_withInt_, subscriber, subscriberMethod, priority)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventSubscription)
