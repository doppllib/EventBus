//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidContentIOSContext.h"
#include "CoTouchlabDopplUtilsPlatformUtils.h"
#include "DeGreenrobotEventEventBus.h"
#include "DeGreenrobotEventTestEventBusBasicTest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/util/Log.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/ref/WeakReference.h"
#include "junit/framework/TestCase.h"
#include "org/junit/Before.h"
#include "org/junit/Test.h"

@interface DeGreenrobotEventTestEventBusBasicTest () {
 @public
  DeGreenrobotEventEventBus *eventBus_;
  NSString *lastStringEvent_;
  jint countStringEvent_;
  jint countIntEvent_;
  jint lastIntEvent_;
  jint countMyEventExtended_;
  jint countMyEvent_;
}

- (void)assertSubscriberNotReferencedWithJavaLangRefWeakReference:(JavaLangRefWeakReference *)ref;

@end

J2OBJC_FIELD_SETTER(DeGreenrobotEventTestEventBusBasicTest, eventBus_, DeGreenrobotEventEventBus *)
J2OBJC_FIELD_SETTER(DeGreenrobotEventTestEventBusBasicTest, lastStringEvent_, NSString *)

__attribute__((unused)) static void DeGreenrobotEventTestEventBusBasicTest_assertSubscriberNotReferencedWithJavaLangRefWeakReference_(DeGreenrobotEventTestEventBusBasicTest *self, JavaLangRefWeakReference *ref);

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$3();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$4();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$5();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$6();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$7();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$8();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$9();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$10();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$11();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$12();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$13();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$14();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$15();

@interface DeGreenrobotEventTestEventBusBasicTest_1 : NSObject

- (instancetype)init;

- (void)onEventWithId:(id)event;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusBasicTest_1)

__attribute__((unused)) static void DeGreenrobotEventTestEventBusBasicTest_1_init(DeGreenrobotEventTestEventBusBasicTest_1 *self);

__attribute__((unused)) static DeGreenrobotEventTestEventBusBasicTest_1 *new_DeGreenrobotEventTestEventBusBasicTest_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DeGreenrobotEventTestEventBusBasicTest_1 *create_DeGreenrobotEventTestEventBusBasicTest_1_init();

@interface DeGreenrobotEventTestEventBusBasicTest_2 : NSObject

- (instancetype)init;

- (void)onEventWithJavaLangCharSequence:(id<JavaLangCharSequence>)event;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusBasicTest_2)

__attribute__((unused)) static void DeGreenrobotEventTestEventBusBasicTest_2_init(DeGreenrobotEventTestEventBusBasicTest_2 *self);

__attribute__((unused)) static DeGreenrobotEventTestEventBusBasicTest_2 *new_DeGreenrobotEventTestEventBusBasicTest_2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DeGreenrobotEventTestEventBusBasicTest_2 *create_DeGreenrobotEventTestEventBusBasicTest_2_init();

@interface DeGreenrobotEventTestEventBusBasicTest_RepostInteger () {
 @public
  DeGreenrobotEventTestEventBusBasicTest *this$0_;
}

@end

@implementation DeGreenrobotEventTestEventBusBasicTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusBasicTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&eventBus_, new_DeGreenrobotEventEventBus_init());
}

- (void)testRegisterAndPost {
  DeGreenrobotEventTestEventBusBasicTest_TestActivity *testActivity = create_DeGreenrobotEventTestEventBusBasicTest_TestActivity_init();
  NSString *event = @"Hello";
  jlong start = JavaLangSystem_currentTimeMillis();
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:testActivity];
  jlong time = JavaLangSystem_currentTimeMillis() - start;
  AndroidUtilLog_dWithNSString_withNSString_(JreLoadStatic(DeGreenrobotEventEventBus, TAG), JreStrcat("$J$", @"Registered in ", time, @"ms"));
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:event];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(event, testActivity->lastStringEvent_);
}

- (void)testPostWithoutSubscriber {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Hello"];
}

- (void)testUnregisterWithoutRegister {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:self];
}

- (void)testUnregisterNotLeaking {
  if (CoTouchlabDopplUtilsPlatformUtils_isJ2objc()) return;
  DeGreenrobotEventTestEventBusBasicTest *subscriber = create_DeGreenrobotEventTestEventBusBasicTest_init();
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:subscriber];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:subscriber];
  JavaLangRefWeakReference *ref = create_JavaLangRefWeakReference_initWithId_(subscriber);
  subscriber = nil;
  DeGreenrobotEventTestEventBusBasicTest_assertSubscriberNotReferencedWithJavaLangRefWeakReference_(self, ref);
}

- (void)assertSubscriberNotReferencedWithJavaLangRefWeakReference:(JavaLangRefWeakReference *)ref {
  DeGreenrobotEventTestEventBusBasicTest_assertSubscriberNotReferencedWithJavaLangRefWeakReference_(self, ref);
}

- (void)testRegisterTwice {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  @try {
    [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
    JunitFrameworkTestCase_failWithNSString_(@"Did not throw");
  }
  @catch (JavaLangRuntimeException *expected) {
  }
}

- (void)testIsRegistered {
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) isRegisteredWithId:self]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) isRegisteredWithId:self]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:self];
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) isRegisteredWithId:self]);
}

- (void)testPostWithTwoSubscriber {
  DeGreenrobotEventTestEventBusBasicTest *test2 = create_DeGreenrobotEventTestEventBusBasicTest_init();
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:test2];
  NSString *event = @"Hello";
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:event];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(event, lastStringEvent_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(event, test2->lastStringEvent_);
}

- (void)testPostMultipleTimes {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  DeGreenrobotEventTestEventBusBasicTest_MyEvent *event = create_DeGreenrobotEventTestEventBusBasicTest_MyEvent_initWithDeGreenrobotEventTestEventBusBasicTest_(self);
  jint count = 1000;
  jlong start = JavaLangSystem_currentTimeMillis();
  for (jint i = 0; i < count; i++) {
    [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:event];
  }
  jlong time = JavaLangSystem_currentTimeMillis() - start;
  AndroidUtilLog_dWithNSString_withNSString_(JreLoadStatic(DeGreenrobotEventEventBus, TAG), JreStrcat("$I$J$", @"Posted ", count, @" events in ", time, @"ms"));
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(count, countMyEvent_);
}

- (void)testPostAfterUnregister {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Hello"];
  JunitFrameworkTestCase_assertNullWithId_(lastStringEvent_);
}

- (void)testRegisterAndPostTwoTypes {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:JavaLangInteger_valueOfWithInt_(42)];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Hello"];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, countIntEvent_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, countStringEvent_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(42, lastIntEvent_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"Hello", lastStringEvent_);
}

- (void)testRegisterUnregisterAndPostTwoTypes {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:JavaLangInteger_valueOfWithInt_(42)];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Hello"];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(0, countIntEvent_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(0, lastIntEvent_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(0, countStringEvent_);
}

- (void)testPostOnDifferentEventBus {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [create_DeGreenrobotEventEventBus_init() postWithId:@"Hello"];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(0, countStringEvent_);
}

- (void)testPostInEventHandler {
  DeGreenrobotEventTestEventBusBasicTest_RepostInteger *reposter = create_DeGreenrobotEventTestEventBusBasicTest_RepostInteger_initWithDeGreenrobotEventTestEventBusBasicTest_(self);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:reposter];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:JavaLangInteger_valueOfWithInt_(1)];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(10, countIntEvent_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(10, lastIntEvent_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(10, reposter->countEvent_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(10, reposter->lastEvent_);
}

- (void)testHasSubscriberForEvent {
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:self];
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
}

- (void)testHasSubscriberForEventSuperclass {
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
  id subscriber = create_DeGreenrobotEventTestEventBusBasicTest_1_init();
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:subscriber];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:subscriber];
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
}

- (void)testHasSubscriberForEventImplementedInterface {
  if (CoTouchlabDopplUtilsPlatformUtils_isJ2objc()) return;
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
  id subscriber = create_DeGreenrobotEventTestEventBusBasicTest_2_init();
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:subscriber];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:JavaLangCharSequence_class_()]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:subscriber];
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:JavaLangCharSequence_class_()]);
  JunitFrameworkTestCase_assertFalseWithBoolean_([((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) hasSubscriberForEventWithIOSClass:NSString_class_()]);
}

- (void)onEventWithNSString:(NSString *)event {
  JreStrongAssign(&lastStringEvent_, event);
  countStringEvent_++;
}

- (void)onEventWithJavaLangInteger:(JavaLangInteger *)event {
  lastIntEvent_ = [((JavaLangInteger *) nil_chk(event)) intValue];
  countIntEvent_++;
}

- (void)onEventWithDeGreenrobotEventTestEventBusBasicTest_MyEvent:(DeGreenrobotEventTestEventBusBasicTest_MyEvent *)event {
  countMyEvent_++;
}

- (void)onEventWithDeGreenrobotEventTestEventBusBasicTest_MyEventExtended:(DeGreenrobotEventTestEventBusBasicTest_MyEventExtended *)event {
  countMyEventExtended_++;
}

- (void)dealloc {
  RELEASE_(eventBus_);
  RELEASE_(lastStringEvent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 4, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 9, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 10, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 11, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 12, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 13, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 14, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 15, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 16, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 17, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 18, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 19, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 24, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testRegisterAndPost);
  methods[3].selector = @selector(testPostWithoutSubscriber);
  methods[4].selector = @selector(testUnregisterWithoutRegister);
  methods[5].selector = @selector(testUnregisterNotLeaking);
  methods[6].selector = @selector(assertSubscriberNotReferencedWithJavaLangRefWeakReference:);
  methods[7].selector = @selector(testRegisterTwice);
  methods[8].selector = @selector(testIsRegistered);
  methods[9].selector = @selector(testPostWithTwoSubscriber);
  methods[10].selector = @selector(testPostMultipleTimes);
  methods[11].selector = @selector(testPostAfterUnregister);
  methods[12].selector = @selector(testRegisterAndPostTwoTypes);
  methods[13].selector = @selector(testRegisterUnregisterAndPostTwoTypes);
  methods[14].selector = @selector(testPostOnDifferentEventBus);
  methods[15].selector = @selector(testPostInEventHandler);
  methods[16].selector = @selector(testHasSubscriberForEvent);
  methods[17].selector = @selector(testHasSubscriberForEventSuperclass);
  methods[18].selector = @selector(testHasSubscriberForEventImplementedInterface);
  methods[19].selector = @selector(onEventWithNSString:);
  methods[20].selector = @selector(onEventWithJavaLangInteger:);
  methods[21].selector = @selector(onEventWithDeGreenrobotEventTestEventBusBasicTest_MyEvent:);
  methods[22].selector = @selector(onEventWithDeGreenrobotEventTestEventBusBasicTest_MyEventExtended:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "eventBus_", "LDeGreenrobotEventEventBus;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastStringEvent_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "countStringEvent_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "countIntEvent_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastIntEvent_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "countMyEventExtended_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "countMyEvent_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$0, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$1, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$2, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$3, "assertSubscriberNotReferenced", "LJavaLangRefWeakReference;", "(Ljava/lang/ref/WeakReference<Lde/greenrobot/event/test/EventBusBasicTest;>;)V", (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$4, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$5, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$6, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$7, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$8, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$9, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$10, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$11, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$12, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$13, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$14, (void *)&DeGreenrobotEventTestEventBusBasicTest__Annotations$15, "onEvent", "LNSString;", "LJavaLangInteger;", "LDeGreenrobotEventTestEventBusBasicTest_MyEvent;", "LDeGreenrobotEventTestEventBusBasicTest_MyEventExtended;", "LDeGreenrobotEventTestEventBusBasicTest_TestActivity;LDeGreenrobotEventTestEventBusBasicTest_MyEvent;LDeGreenrobotEventTestEventBusBasicTest_MyEventExtended;LDeGreenrobotEventTestEventBusBasicTest_RepostInteger;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusBasicTest = { "EventBusBasicTest", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x1, 23, 7, -1, 25, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusBasicTest;
}

@end

void DeGreenrobotEventTestEventBusBasicTest_init(DeGreenrobotEventTestEventBusBasicTest *self) {
  JunitFrameworkTestCase_init(self);
}

DeGreenrobotEventTestEventBusBasicTest *new_DeGreenrobotEventTestEventBusBasicTest_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusBasicTest, init)
}

DeGreenrobotEventTestEventBusBasicTest *create_DeGreenrobotEventTestEventBusBasicTest_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusBasicTest, init)
}

void DeGreenrobotEventTestEventBusBasicTest_assertSubscriberNotReferencedWithJavaLangRefWeakReference_(DeGreenrobotEventTestEventBusBasicTest *self, JavaLangRefWeakReference *ref) {
  DeGreenrobotEventTestEventBusBasicTest *subscriberTest = create_DeGreenrobotEventTestEventBusBasicTest_init();
  JavaLangRefWeakReference *refTest = create_JavaLangRefWeakReference_initWithId_(subscriberTest);
  subscriberTest = nil;
  JavaLangSystem_gc();
  JunitFrameworkTestCase_assertNullWithId_([refTest get]);
  JunitFrameworkTestCase_assertNullWithId_([((JavaLangRefWeakReference *) nil_chk(ref)) get]);
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitBefore() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$9() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$10() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$11() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$12() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$13() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$14() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBasicTest__Annotations$15() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusBasicTest)

@implementation DeGreenrobotEventTestEventBusBasicTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusBasicTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onEventWithId:(id)event {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onEventWithId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onEvent", "LNSObject;", "LDeGreenrobotEventTestEventBusBasicTest;", "testHasSubscriberForEventSuperclass" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusBasicTest_1 = { "", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_DeGreenrobotEventTestEventBusBasicTest_1;
}

@end

void DeGreenrobotEventTestEventBusBasicTest_1_init(DeGreenrobotEventTestEventBusBasicTest_1 *self) {
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusBasicTest_1 *new_DeGreenrobotEventTestEventBusBasicTest_1_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusBasicTest_1, init)
}

DeGreenrobotEventTestEventBusBasicTest_1 *create_DeGreenrobotEventTestEventBusBasicTest_1_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusBasicTest_1, init)
}

@implementation DeGreenrobotEventTestEventBusBasicTest_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusBasicTest_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onEventWithJavaLangCharSequence:(id<JavaLangCharSequence>)event {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onEventWithJavaLangCharSequence:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onEvent", "LJavaLangCharSequence;", "LDeGreenrobotEventTestEventBusBasicTest;", "testHasSubscriberForEventImplementedInterface" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusBasicTest_2 = { "", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_DeGreenrobotEventTestEventBusBasicTest_2;
}

@end

void DeGreenrobotEventTestEventBusBasicTest_2_init(DeGreenrobotEventTestEventBusBasicTest_2 *self) {
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusBasicTest_2 *new_DeGreenrobotEventTestEventBusBasicTest_2_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusBasicTest_2, init)
}

DeGreenrobotEventTestEventBusBasicTest_2 *create_DeGreenrobotEventTestEventBusBasicTest_2_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusBasicTest_2, init)
}

@implementation DeGreenrobotEventTestEventBusBasicTest_TestActivity

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusBasicTest_TestActivity_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onEventWithNSString:(NSString *)event {
  JreStrongAssign(&lastStringEvent_, event);
}

- (void)dealloc {
  RELEASE_(lastStringEvent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onEventWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lastStringEvent_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onEvent", "LNSString;", "LDeGreenrobotEventTestEventBusBasicTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusBasicTest_TestActivity = { "TestActivity", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x8, 2, 1, 2, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusBasicTest_TestActivity;
}

@end

void DeGreenrobotEventTestEventBusBasicTest_TestActivity_init(DeGreenrobotEventTestEventBusBasicTest_TestActivity *self) {
  AndroidContentIOSContext_init(self);
}

DeGreenrobotEventTestEventBusBasicTest_TestActivity *new_DeGreenrobotEventTestEventBusBasicTest_TestActivity_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusBasicTest_TestActivity, init)
}

DeGreenrobotEventTestEventBusBasicTest_TestActivity *create_DeGreenrobotEventTestEventBusBasicTest_TestActivity_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusBasicTest_TestActivity, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusBasicTest_TestActivity)

@implementation DeGreenrobotEventTestEventBusBasicTest_MyEvent

- (instancetype)initWithDeGreenrobotEventTestEventBusBasicTest:(DeGreenrobotEventTestEventBusBasicTest *)outer$ {
  DeGreenrobotEventTestEventBusBasicTest_MyEvent_initWithDeGreenrobotEventTestEventBusBasicTest_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusBasicTest:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LDeGreenrobotEventTestEventBusBasicTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusBasicTest_MyEvent = { "MyEvent", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x0, 1, 0, 0, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusBasicTest_MyEvent;
}

@end

void DeGreenrobotEventTestEventBusBasicTest_MyEvent_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest_MyEvent *self, DeGreenrobotEventTestEventBusBasicTest *outer$) {
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusBasicTest_MyEvent *new_DeGreenrobotEventTestEventBusBasicTest_MyEvent_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusBasicTest_MyEvent, initWithDeGreenrobotEventTestEventBusBasicTest_, outer$)
}

DeGreenrobotEventTestEventBusBasicTest_MyEvent *create_DeGreenrobotEventTestEventBusBasicTest_MyEvent_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusBasicTest_MyEvent, initWithDeGreenrobotEventTestEventBusBasicTest_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusBasicTest_MyEvent)

@implementation DeGreenrobotEventTestEventBusBasicTest_MyEventExtended

- (instancetype)initWithDeGreenrobotEventTestEventBusBasicTest:(DeGreenrobotEventTestEventBusBasicTest *)outer$ {
  DeGreenrobotEventTestEventBusBasicTest_MyEventExtended_initWithDeGreenrobotEventTestEventBusBasicTest_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusBasicTest:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LDeGreenrobotEventTestEventBusBasicTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusBasicTest_MyEventExtended = { "MyEventExtended", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x0, 1, 0, 0, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusBasicTest_MyEventExtended;
}

@end

void DeGreenrobotEventTestEventBusBasicTest_MyEventExtended_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest_MyEventExtended *self, DeGreenrobotEventTestEventBusBasicTest *outer$) {
  DeGreenrobotEventTestEventBusBasicTest_MyEvent_initWithDeGreenrobotEventTestEventBusBasicTest_(self, outer$);
}

DeGreenrobotEventTestEventBusBasicTest_MyEventExtended *new_DeGreenrobotEventTestEventBusBasicTest_MyEventExtended_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusBasicTest_MyEventExtended, initWithDeGreenrobotEventTestEventBusBasicTest_, outer$)
}

DeGreenrobotEventTestEventBusBasicTest_MyEventExtended *create_DeGreenrobotEventTestEventBusBasicTest_MyEventExtended_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusBasicTest_MyEventExtended, initWithDeGreenrobotEventTestEventBusBasicTest_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusBasicTest_MyEventExtended)

@implementation DeGreenrobotEventTestEventBusBasicTest_RepostInteger

- (instancetype)initWithDeGreenrobotEventTestEventBusBasicTest:(DeGreenrobotEventTestEventBusBasicTest *)outer$ {
  DeGreenrobotEventTestEventBusBasicTest_RepostInteger_initWithDeGreenrobotEventTestEventBusBasicTest_(self, outer$);
  return self;
}

- (void)onEventWithJavaLangInteger:(JavaLangInteger *)event {
  lastEvent_ = [((JavaLangInteger *) nil_chk(event)) intValue];
  countEvent_++;
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(countEvent_, [event intValue]);
  if ([event intValue] < 10) {
    jint countIntEventBefore = countEvent_;
    [((DeGreenrobotEventEventBus *) nil_chk(this$0_->eventBus_)) postWithId:JavaLangInteger_valueOfWithInt_([event intValue] + 1)];
    JunitFrameworkTestCase_assertEqualsWithInt_withInt_(countIntEventBefore, countIntEventBefore);
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusBasicTest:);
  methods[1].selector = @selector(onEventWithJavaLangInteger:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LDeGreenrobotEventTestEventBusBasicTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "lastEvent_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "countEvent_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onEvent", "LJavaLangInteger;", "LDeGreenrobotEventTestEventBusBasicTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusBasicTest_RepostInteger = { "RepostInteger", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x0, 2, 3, 2, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusBasicTest_RepostInteger;
}

@end

void DeGreenrobotEventTestEventBusBasicTest_RepostInteger_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest_RepostInteger *self, DeGreenrobotEventTestEventBusBasicTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusBasicTest_RepostInteger *new_DeGreenrobotEventTestEventBusBasicTest_RepostInteger_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusBasicTest_RepostInteger, initWithDeGreenrobotEventTestEventBusBasicTest_, outer$)
}

DeGreenrobotEventTestEventBusBasicTest_RepostInteger *create_DeGreenrobotEventTestEventBusBasicTest_RepostInteger_initWithDeGreenrobotEventTestEventBusBasicTest_(DeGreenrobotEventTestEventBusBasicTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusBasicTest_RepostInteger, initWithDeGreenrobotEventTestEventBusBasicTest_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusBasicTest_RepostInteger)
