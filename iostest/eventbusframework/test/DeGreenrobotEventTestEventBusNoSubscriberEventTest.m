//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DeGreenrobotEventEventBus.h"
#include "DeGreenrobotEventEventBusBuilder.h"
#include "DeGreenrobotEventNoSubscriberEvent.h"
#include "DeGreenrobotEventSubscriberExceptionEvent.h"
#include "DeGreenrobotEventTestAbstractEventBusTest.h"
#include "DeGreenrobotEventTestEventBusNoSubscriberEventTest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "junit/framework/TestCase.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusNoSubscriberEventTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusNoSubscriberEventTest__Annotations$1();

@interface DeGreenrobotEventTestEventBusNoSubscriberEventTest_1 : NSObject

- (instancetype)init;

- (void)onEventWithNSString:(NSString *)dummy;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusNoSubscriberEventTest_1)

__attribute__((unused)) static void DeGreenrobotEventTestEventBusNoSubscriberEventTest_1_init(DeGreenrobotEventTestEventBusNoSubscriberEventTest_1 *self);

__attribute__((unused)) static DeGreenrobotEventTestEventBusNoSubscriberEventTest_1 *new_DeGreenrobotEventTestEventBusNoSubscriberEventTest_1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DeGreenrobotEventTestEventBusNoSubscriberEventTest_1 *create_DeGreenrobotEventTestEventBusNoSubscriberEventTest_1_init();

@implementation DeGreenrobotEventTestEventBusNoSubscriberEventTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusNoSubscriberEventTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testNoSubscriberEvent {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Foo"];
  [self assertEventCountWithInt:1];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(DeGreenrobotEventNoSubscriberEvent_class_(), [nil_chk(JreLoadVolatileId(&lastEvent_)) java_getClass]);
  DeGreenrobotEventNoSubscriberEvent *noSub = (DeGreenrobotEventNoSubscriberEvent *) cast_chk(JreLoadVolatileId(&lastEvent_), [DeGreenrobotEventNoSubscriberEvent class]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(@"Foo", ((DeGreenrobotEventNoSubscriberEvent *) nil_chk(noSub))->originalEvent_);
  JunitFrameworkTestCase_assertSameWithId_withId_(eventBus_, noSub->eventBus_);
}

- (void)testNoSubscriberEventAfterUnregister {
  id subscriber = create_DeGreenrobotEventTestEventBusNoSubscriberEventTest_1_init();
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:subscriber];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:subscriber];
  [self testNoSubscriberEvent];
}

- (void)testBadNoSubscriberSubscriber {
  JreStrongAssign(&eventBus_, [((DeGreenrobotEventEventBusBuilder *) nil_chk([((DeGreenrobotEventEventBusBuilder *) nil_chk(DeGreenrobotEventEventBus_builder())) logNoSubscriberMessagesWithBoolean:false])) build]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:create_DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber_initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest_(self)];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Foo"];
  [self assertEventCountWithInt:2];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(DeGreenrobotEventSubscriberExceptionEvent_class_(), [nil_chk(JreLoadVolatileId(&lastEvent_)) java_getClass]);
  DeGreenrobotEventNoSubscriberEvent *noSub = (DeGreenrobotEventNoSubscriberEvent *) cast_chk(((DeGreenrobotEventSubscriberExceptionEvent *) nil_chk(((DeGreenrobotEventSubscriberExceptionEvent *) cast_chk(JreLoadVolatileId(&lastEvent_), [DeGreenrobotEventSubscriberExceptionEvent class]))))->causingEvent_, [DeGreenrobotEventNoSubscriberEvent class]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(@"Foo", ((DeGreenrobotEventNoSubscriberEvent *) nil_chk(noSub))->originalEvent_);
}

- (void)onEventWithDeGreenrobotEventNoSubscriberEvent:(DeGreenrobotEventNoSubscriberEvent *)event {
  [self trackEventWithId:event];
}

- (void)onEventWithDeGreenrobotEventSubscriberExceptionEvent:(DeGreenrobotEventSubscriberExceptionEvent *)event {
  [self trackEventWithId:event];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testNoSubscriberEvent);
  methods[2].selector = @selector(testNoSubscriberEventAfterUnregister);
  methods[3].selector = @selector(testBadNoSubscriberSubscriber);
  methods[4].selector = @selector(onEventWithDeGreenrobotEventNoSubscriberEvent:);
  methods[5].selector = @selector(onEventWithDeGreenrobotEventSubscriberExceptionEvent:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&DeGreenrobotEventTestEventBusNoSubscriberEventTest__Annotations$0, (void *)&DeGreenrobotEventTestEventBusNoSubscriberEventTest__Annotations$1, "onEvent", "LDeGreenrobotEventNoSubscriberEvent;", "LDeGreenrobotEventSubscriberExceptionEvent;", "LDeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusNoSubscriberEventTest = { "EventBusNoSubscriberEventTest", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, 5, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusNoSubscriberEventTest;
}

@end

void DeGreenrobotEventTestEventBusNoSubscriberEventTest_init(DeGreenrobotEventTestEventBusNoSubscriberEventTest *self) {
  DeGreenrobotEventTestAbstractEventBusTest_init(self);
}

DeGreenrobotEventTestEventBusNoSubscriberEventTest *new_DeGreenrobotEventTestEventBusNoSubscriberEventTest_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusNoSubscriberEventTest, init)
}

DeGreenrobotEventTestEventBusNoSubscriberEventTest *create_DeGreenrobotEventTestEventBusNoSubscriberEventTest_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusNoSubscriberEventTest, init)
}

IOSObjectArray *DeGreenrobotEventTestEventBusNoSubscriberEventTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusNoSubscriberEventTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusNoSubscriberEventTest)

@implementation DeGreenrobotEventTestEventBusNoSubscriberEventTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusNoSubscriberEventTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onEventWithNSString:(NSString *)dummy {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onEventWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onEvent", "LNSString;", "LDeGreenrobotEventTestEventBusNoSubscriberEventTest;", "testNoSubscriberEventAfterUnregister" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusNoSubscriberEventTest_1 = { "", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, -1, -1 };
  return &_DeGreenrobotEventTestEventBusNoSubscriberEventTest_1;
}

@end

void DeGreenrobotEventTestEventBusNoSubscriberEventTest_1_init(DeGreenrobotEventTestEventBusNoSubscriberEventTest_1 *self) {
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusNoSubscriberEventTest_1 *new_DeGreenrobotEventTestEventBusNoSubscriberEventTest_1_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusNoSubscriberEventTest_1, init)
}

DeGreenrobotEventTestEventBusNoSubscriberEventTest_1 *create_DeGreenrobotEventTestEventBusNoSubscriberEventTest_1_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusNoSubscriberEventTest_1, init)
}

@implementation DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber

- (instancetype)initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest:(DeGreenrobotEventTestEventBusNoSubscriberEventTest *)outer$ {
  DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber_initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest_(self, outer$);
  return self;
}

- (void)onEventWithDeGreenrobotEventNoSubscriberEvent:(DeGreenrobotEventNoSubscriberEvent *)event {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"I'm bad");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest:);
  methods[1].selector = @selector(onEventWithDeGreenrobotEventNoSubscriberEvent:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onEvent", "LDeGreenrobotEventNoSubscriberEvent;", "LDeGreenrobotEventTestEventBusNoSubscriberEventTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber = { "BadNoSubscriberSubscriber", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x0, 2, 0, 2, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber;
}

@end

void DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber_initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest_(DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber *self, DeGreenrobotEventTestEventBusNoSubscriberEventTest *outer$) {
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber *new_DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber_initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest_(DeGreenrobotEventTestEventBusNoSubscriberEventTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber, initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest_, outer$)
}

DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber *create_DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber_initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest_(DeGreenrobotEventTestEventBusNoSubscriberEventTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber, initWithDeGreenrobotEventTestEventBusNoSubscriberEventTest_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusNoSubscriberEventTest_BadNoSubscriberSubscriber)
