//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidOsHandler.h"
#include "AndroidOsLooper.h"
#include "DeGreenrobotEventEventBus.h"
#include "DeGreenrobotEventTestAbstractEventBusTest.h"
#include "DeGreenrobotEventTestEventBusMainThreadRacingTest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Random.h"
#include "java/util/concurrent/CountDownLatch.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/junit/Test.h"

@interface DeGreenrobotEventTestEventBusMainThreadRacingTest () {
 @public
  JavaUtilConcurrentCountDownLatch *startLatch_;
  volatile_id failed_;
}

@end

J2OBJC_FIELD_SETTER(DeGreenrobotEventTestEventBusMainThreadRacingTest, startLatch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_VOLATILE_FIELD_SETTER(DeGreenrobotEventTestEventBusMainThreadRacingTest, failed_, JavaLangRuntimeException *)

inline jint DeGreenrobotEventTestEventBusMainThreadRacingTest_get_ITERATIONS();
#define DeGreenrobotEventTestEventBusMainThreadRacingTest_ITERATIONS 100
J2OBJC_STATIC_FIELD_CONSTANT(DeGreenrobotEventTestEventBusMainThreadRacingTest, ITERATIONS, jint)

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusMainThreadRacingTest__Annotations$0();

@interface DeGreenrobotEventTestEventBusMainThreadRacingTest_1 : NSObject < JavaLangRunnable > {
 @public
  DeGreenrobotEventTestEventBusMainThreadRacingTest *this$0_;
}

- (instancetype)initWithDeGreenrobotEventTestEventBusMainThreadRacingTest:(DeGreenrobotEventTestEventBusMainThreadRacingTest *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusMainThreadRacingTest_1)

__attribute__((unused)) static void DeGreenrobotEventTestEventBusMainThreadRacingTest_1_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest_1 *self, DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$);

__attribute__((unused)) static DeGreenrobotEventTestEventBusMainThreadRacingTest_1 *new_DeGreenrobotEventTestEventBusMainThreadRacingTest_1_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static DeGreenrobotEventTestEventBusMainThreadRacingTest_1 *create_DeGreenrobotEventTestEventBusMainThreadRacingTest_1_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$);

@interface DeGreenrobotEventTestEventBusMainThreadRacingTest_2 : NSObject < JavaLangRunnable > {
 @public
  DeGreenrobotEventTestEventBusMainThreadRacingTest *this$0_;
}

- (instancetype)initWithDeGreenrobotEventTestEventBusMainThreadRacingTest:(DeGreenrobotEventTestEventBusMainThreadRacingTest *)outer$;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusMainThreadRacingTest_2)

__attribute__((unused)) static void DeGreenrobotEventTestEventBusMainThreadRacingTest_2_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest_2 *self, DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$);

__attribute__((unused)) static DeGreenrobotEventTestEventBusMainThreadRacingTest_2 *new_DeGreenrobotEventTestEventBusMainThreadRacingTest_2_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static DeGreenrobotEventTestEventBusMainThreadRacingTest_2 *create_DeGreenrobotEventTestEventBusMainThreadRacingTest_2_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$);

@interface DeGreenrobotEventTestEventBusMainThreadRacingTest_3 : NSObject < JavaLangRunnable > {
 @public
  JavaUtilConcurrentCountDownLatch *val$doneLatch_;
}

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusMainThreadRacingTest_3)

__attribute__((unused)) static void DeGreenrobotEventTestEventBusMainThreadRacingTest_3_initWithJavaUtilConcurrentCountDownLatch_(DeGreenrobotEventTestEventBusMainThreadRacingTest_3 *self, JavaUtilConcurrentCountDownLatch *capture$0);

__attribute__((unused)) static DeGreenrobotEventTestEventBusMainThreadRacingTest_3 *new_DeGreenrobotEventTestEventBusMainThreadRacingTest_3_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static DeGreenrobotEventTestEventBusMainThreadRacingTest_3 *create_DeGreenrobotEventTestEventBusMainThreadRacingTest_3_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0);

@interface DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster () {
 @public
  DeGreenrobotEventTestEventBusMainThreadRacingTest *this$0_;
}

@end

@implementation DeGreenrobotEventTestEventBusMainThreadRacingTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusMainThreadRacingTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testRacingThreads {
  id<JavaLangRunnable> register_ = create_DeGreenrobotEventTestEventBusMainThreadRacingTest_1_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(self);
  id<JavaLangRunnable> unregister = create_DeGreenrobotEventTestEventBusMainThreadRacingTest_2_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(self);
  JreStrongAssignAndConsume(&startLatch_, new_JavaUtilConcurrentCountDownLatch_initWithInt_(2));
  DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster *backgroundPoster = create_DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(self);
  [backgroundPoster start];
  @try {
    AndroidOsHandler *handler = create_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper_getMainLooper());
    JavaUtilRandom *random = create_JavaUtilRandom_init();
    [self countDownAndAwaitLatchWithJavaUtilConcurrentCountDownLatch:startLatch_ withLong:10];
    for (jint i = 0; i < DeGreenrobotEventTestEventBusMainThreadRacingTest_ITERATIONS; i++) {
      [handler postWithJavaLangRunnable:register_];
      JavaLangThread_sleepWithLong_withInt_(0, [random nextIntWithInt:300]);
      [handler postWithJavaLangRunnable:unregister];
      if (JreLoadVolatileId(&failed_) != nil) {
        @throw create_JavaLangRuntimeException_initWithNSString_withNSException_(JreStrcat("$I", @"Failed in iteration ", i), JreLoadVolatileId(&failed_));
      }
      [self waitForHandlerWithAndroidOsHandler:handler];
    }
  }
  @finally {
    JreAssignVolatileBoolean(&backgroundPoster->running_, false);
    [backgroundPoster join];
  }
}

- (void)waitForHandlerWithAndroidOsHandler:(AndroidOsHandler *)handler {
  JavaUtilConcurrentCountDownLatch *doneLatch = create_JavaUtilConcurrentCountDownLatch_initWithInt_(1);
  [((AndroidOsHandler *) nil_chk(handler)) postWithJavaLangRunnable:create_DeGreenrobotEventTestEventBusMainThreadRacingTest_3_initWithJavaUtilConcurrentCountDownLatch_(doneLatch)];
  [self awaitLatchWithJavaUtilConcurrentCountDownLatch:doneLatch withLong:10];
}

- (void)onEventMainThreadWithNSString:(NSString *)event {
  [self trackEventWithId:event];
  if (unregistered_) {
    JreVolatileStrongAssign(&failed_, create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$@", @"Main thread event delivered while unregistered on received event #", eventCount_)));
  }
}

- (void)__javaClone:(DeGreenrobotEventTestEventBusMainThreadRacingTest *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&failed_, &original->failed_);
}

- (void)dealloc {
  RELEASE_(startLatch_);
  JreReleaseVolatile(&failed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testRacingThreads);
  methods[2].selector = @selector(waitForHandlerWithAndroidOsHandler:);
  methods[3].selector = @selector(onEventMainThreadWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ITERATIONS", "I", .constantValue.asInt = DeGreenrobotEventTestEventBusMainThreadRacingTest_ITERATIONS, 0x1a, -1, -1, -1, -1 },
    { "unregistered_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "startLatch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "failed_", "LJavaLangRuntimeException;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangInterruptedException;", (void *)&DeGreenrobotEventTestEventBusMainThreadRacingTest__Annotations$0, "waitForHandler", "LAndroidOsHandler;", "onEventMainThread", "LNSString;", "LDeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusMainThreadRacingTest = { "EventBusMainThreadRacingTest", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x1, 4, 4, -1, 6, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusMainThreadRacingTest;
}

@end

void DeGreenrobotEventTestEventBusMainThreadRacingTest_init(DeGreenrobotEventTestEventBusMainThreadRacingTest *self) {
  DeGreenrobotEventTestAbstractEventBusTest_init(self);
}

DeGreenrobotEventTestEventBusMainThreadRacingTest *new_DeGreenrobotEventTestEventBusMainThreadRacingTest_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest, init)
}

DeGreenrobotEventTestEventBusMainThreadRacingTest *create_DeGreenrobotEventTestEventBusMainThreadRacingTest_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest, init)
}

IOSObjectArray *DeGreenrobotEventTestEventBusMainThreadRacingTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusMainThreadRacingTest)

@implementation DeGreenrobotEventTestEventBusMainThreadRacingTest_1

- (instancetype)initWithDeGreenrobotEventTestEventBusMainThreadRacingTest:(DeGreenrobotEventTestEventBusMainThreadRacingTest *)outer$ {
  DeGreenrobotEventTestEventBusMainThreadRacingTest_1_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(self, outer$);
  return self;
}

- (void)run {
  [((DeGreenrobotEventEventBus *) nil_chk(this$0_->eventBus_)) register__WithId:this$0_];
  this$0_->unregistered_ = false;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusMainThreadRacingTest:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LDeGreenrobotEventTestEventBusMainThreadRacingTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LDeGreenrobotEventTestEventBusMainThreadRacingTest;", "testRacingThreads" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusMainThreadRacingTest_1 = { "", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusMainThreadRacingTest_1;
}

@end

void DeGreenrobotEventTestEventBusMainThreadRacingTest_1_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest_1 *self, DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusMainThreadRacingTest_1 *new_DeGreenrobotEventTestEventBusMainThreadRacingTest_1_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest_1, initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_, outer$)
}

DeGreenrobotEventTestEventBusMainThreadRacingTest_1 *create_DeGreenrobotEventTestEventBusMainThreadRacingTest_1_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest_1, initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_, outer$)
}

@implementation DeGreenrobotEventTestEventBusMainThreadRacingTest_2

- (instancetype)initWithDeGreenrobotEventTestEventBusMainThreadRacingTest:(DeGreenrobotEventTestEventBusMainThreadRacingTest *)outer$ {
  DeGreenrobotEventTestEventBusMainThreadRacingTest_2_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(self, outer$);
  return self;
}

- (void)run {
  [((DeGreenrobotEventEventBus *) nil_chk(this$0_->eventBus_)) unregisterWithId:this$0_];
  this$0_->unregistered_ = true;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusMainThreadRacingTest:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LDeGreenrobotEventTestEventBusMainThreadRacingTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LDeGreenrobotEventTestEventBusMainThreadRacingTest;", "testRacingThreads" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusMainThreadRacingTest_2 = { "", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusMainThreadRacingTest_2;
}

@end

void DeGreenrobotEventTestEventBusMainThreadRacingTest_2_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest_2 *self, DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusMainThreadRacingTest_2 *new_DeGreenrobotEventTestEventBusMainThreadRacingTest_2_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest_2, initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_, outer$)
}

DeGreenrobotEventTestEventBusMainThreadRacingTest_2 *create_DeGreenrobotEventTestEventBusMainThreadRacingTest_2_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest_2, initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_, outer$)
}

@implementation DeGreenrobotEventTestEventBusMainThreadRacingTest_3

- (instancetype)initWithJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$0 {
  DeGreenrobotEventTestEventBusMainThreadRacingTest_3_initWithJavaUtilConcurrentCountDownLatch_(self, capture$0);
  return self;
}

- (void)run {
  [((JavaUtilConcurrentCountDownLatch *) nil_chk(val$doneLatch_)) countDown];
}

- (void)dealloc {
  RELEASE_(val$doneLatch_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilConcurrentCountDownLatch:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$doneLatch_", "LJavaUtilConcurrentCountDownLatch;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LDeGreenrobotEventTestEventBusMainThreadRacingTest;", "waitForHandlerWithAndroidOsHandler:" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusMainThreadRacingTest_3 = { "", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x8018, 2, 1, 0, -1, 1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusMainThreadRacingTest_3;
}

@end

void DeGreenrobotEventTestEventBusMainThreadRacingTest_3_initWithJavaUtilConcurrentCountDownLatch_(DeGreenrobotEventTestEventBusMainThreadRacingTest_3 *self, JavaUtilConcurrentCountDownLatch *capture$0) {
  JreStrongAssign(&self->val$doneLatch_, capture$0);
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusMainThreadRacingTest_3 *new_DeGreenrobotEventTestEventBusMainThreadRacingTest_3_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest_3, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

DeGreenrobotEventTestEventBusMainThreadRacingTest_3 *create_DeGreenrobotEventTestEventBusMainThreadRacingTest_3_initWithJavaUtilConcurrentCountDownLatch_(JavaUtilConcurrentCountDownLatch *capture$0) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest_3, initWithJavaUtilConcurrentCountDownLatch_, capture$0)
}

@implementation DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster

- (instancetype)initWithDeGreenrobotEventTestEventBusMainThreadRacingTest:(DeGreenrobotEventTestEventBusMainThreadRacingTest *)outer$ {
  DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(self, outer$);
  return self;
}

- (void)run {
  [this$0_ countDownAndAwaitLatchWithJavaUtilConcurrentCountDownLatch:this$0_->startLatch_ withLong:10];
  while (JreLoadVolatileBoolean(&running_)) {
    [((DeGreenrobotEventEventBus *) nil_chk(this$0_->eventBus_)) postWithId:@"Posted in background"];
    if (JavaLangMath_random() > 0.9f) {
      JavaLangThread_yield();
    }
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusMainThreadRacingTest:);
  methods[1].selector = @selector(run);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LDeGreenrobotEventTestEventBusMainThreadRacingTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "running_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LDeGreenrobotEventTestEventBusMainThreadRacingTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster = { "BackgroundPoster", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x0, 2, 2, 0, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster;
}

@end

void DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster *self, DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  JavaLangThread_initWithNSString_(self, @"BackgroundPoster");
  JreAssignVolatileBoolean(&self->running_, true);
}

DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster *new_DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster, initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_, outer$)
}

DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster *create_DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster_initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_(DeGreenrobotEventTestEventBusMainThreadRacingTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster, initWithDeGreenrobotEventTestEventBusMainThreadRacingTest_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusMainThreadRacingTest_BackgroundPoster)
