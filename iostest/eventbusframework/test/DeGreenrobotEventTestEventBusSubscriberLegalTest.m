//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DeGreenrobotEventEventBus.h"
#include "DeGreenrobotEventEventBusException.h"
#include "DeGreenrobotEventTestAbstractEventBusTest.h"
#include "DeGreenrobotEventTestEventBusSubscriberLegalTest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "junit/framework/TestCase.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$1();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$2();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$3();

@interface DeGreenrobotEventTestEventBusSubscriberLegalTest_1 : DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract {
 @public
  DeGreenrobotEventTestEventBusSubscriberLegalTest *this$0_;
}

- (instancetype)initWithDeGreenrobotEventTestEventBusSubscriberLegalTest:(DeGreenrobotEventTestEventBusSubscriberLegalTest *)outer$;

- (void)onEventWithNSString:(NSString *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusSubscriberLegalTest_1)

__attribute__((unused)) static void DeGreenrobotEventTestEventBusSubscriberLegalTest_1_initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_(DeGreenrobotEventTestEventBusSubscriberLegalTest_1 *self, DeGreenrobotEventTestEventBusSubscriberLegalTest *outer$);

__attribute__((unused)) static DeGreenrobotEventTestEventBusSubscriberLegalTest_1 *new_DeGreenrobotEventTestEventBusSubscriberLegalTest_1_initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_(DeGreenrobotEventTestEventBusSubscriberLegalTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static DeGreenrobotEventTestEventBusSubscriberLegalTest_1 *create_DeGreenrobotEventTestEventBusSubscriberLegalTest_1_initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_(DeGreenrobotEventTestEventBusSubscriberLegalTest *outer$);

@implementation DeGreenrobotEventTestEventBusSubscriberLegalTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusSubscriberLegalTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testSubscriberLegal {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"42"];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) unregisterWithId:self];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(eventCount_)) intValue]);
}

- (void)testSubscriberNotPublic {
  @try {
    [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:create_DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic_init()];
    JunitFrameworkTestCase_failWithNSString_(@"Registration of ilegal subscriber successful");
  }
  @catch (DeGreenrobotEventEventBusException *e) {
  }
}

- (void)testSubscriberStatic {
  @try {
    [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:create_DeGreenrobotEventTestEventBusSubscriberLegalTest_Static_init()];
    JunitFrameworkTestCase_failWithNSString_(@"Registration of ilegal subscriber successful");
  }
  @catch (DeGreenrobotEventEventBusException *e) {
  }
}

- (void)testSubscriberLegalAbstract {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:create_DeGreenrobotEventTestEventBusSubscriberLegalTest_1_initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_(self)];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"42"];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(eventCount_)) intValue]);
}

- (void)onEventWithNSString:(NSString *)event {
  [self trackEventWithId:event];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 3, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testSubscriberLegal);
  methods[2].selector = @selector(testSubscriberNotPublic);
  methods[3].selector = @selector(testSubscriberStatic);
  methods[4].selector = @selector(testSubscriberLegalAbstract);
  methods[5].selector = @selector(onEventWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$0, (void *)&DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$1, (void *)&DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$2, (void *)&DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$3, "onEvent", "LNSString;", "LDeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic;LDeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract;LDeGreenrobotEventTestEventBusSubscriberLegalTest_Static;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusSubscriberLegalTest = { "EventBusSubscriberLegalTest", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, 6, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusSubscriberLegalTest;
}

@end

void DeGreenrobotEventTestEventBusSubscriberLegalTest_init(DeGreenrobotEventTestEventBusSubscriberLegalTest *self) {
  DeGreenrobotEventTestAbstractEventBusTest_init(self);
}

DeGreenrobotEventTestEventBusSubscriberLegalTest *new_DeGreenrobotEventTestEventBusSubscriberLegalTest_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusSubscriberLegalTest, init)
}

DeGreenrobotEventTestEventBusSubscriberLegalTest *create_DeGreenrobotEventTestEventBusSubscriberLegalTest_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusSubscriberLegalTest, init)
}

IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberLegalTest__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusSubscriberLegalTest)

@implementation DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onEventWithNSString:(NSString *)event {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onEventWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onEvent", "LNSString;", "LDeGreenrobotEventTestEventBusSubscriberLegalTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract = { "Abstract", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x408, 2, 0, 2, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract;
}

@end

void DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract_init(DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract)

@implementation DeGreenrobotEventTestEventBusSubscriberLegalTest_1

- (instancetype)initWithDeGreenrobotEventTestEventBusSubscriberLegalTest:(DeGreenrobotEventTestEventBusSubscriberLegalTest *)outer$ {
  DeGreenrobotEventTestEventBusSubscriberLegalTest_1_initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_(self, outer$);
  return self;
}

- (void)onEventWithNSString:(NSString *)event {
  [this$0_ trackEventWithId:event];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusSubscriberLegalTest:);
  methods[1].selector = @selector(onEventWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LDeGreenrobotEventTestEventBusSubscriberLegalTest;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "onEvent", "LNSString;", "LDeGreenrobotEventTestEventBusSubscriberLegalTest;", "testSubscriberLegalAbstract" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusSubscriberLegalTest_1 = { "", "de.greenrobot.event.test", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, -1, -1 };
  return &_DeGreenrobotEventTestEventBusSubscriberLegalTest_1;
}

@end

void DeGreenrobotEventTestEventBusSubscriberLegalTest_1_initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_(DeGreenrobotEventTestEventBusSubscriberLegalTest_1 *self, DeGreenrobotEventTestEventBusSubscriberLegalTest *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  DeGreenrobotEventTestEventBusSubscriberLegalTest_Abstract_init(self);
}

DeGreenrobotEventTestEventBusSubscriberLegalTest_1 *new_DeGreenrobotEventTestEventBusSubscriberLegalTest_1_initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_(DeGreenrobotEventTestEventBusSubscriberLegalTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusSubscriberLegalTest_1, initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_, outer$)
}

DeGreenrobotEventTestEventBusSubscriberLegalTest_1 *create_DeGreenrobotEventTestEventBusSubscriberLegalTest_1_initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_(DeGreenrobotEventTestEventBusSubscriberLegalTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusSubscriberLegalTest_1, initWithDeGreenrobotEventTestEventBusSubscriberLegalTest_, outer$)
}

@implementation DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onEventWithNSString:(NSString *)event {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onEventWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onEvent", "LNSString;", "LDeGreenrobotEventTestEventBusSubscriberLegalTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic = { "NotPublic", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic;
}

@end

void DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic_init(DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic *self) {
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic *new_DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic, init)
}

DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic *create_DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusSubscriberLegalTest_NotPublic)

@implementation DeGreenrobotEventTestEventBusSubscriberLegalTest_Static

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusSubscriberLegalTest_Static_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)onEventWithNSString:(NSString *)event {
  DeGreenrobotEventTestEventBusSubscriberLegalTest_Static_onEventWithNSString_(event);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onEventWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onEvent", "LNSString;", "LDeGreenrobotEventTestEventBusSubscriberLegalTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusSubscriberLegalTest_Static = { "Static", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x8, 2, 0, 2, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusSubscriberLegalTest_Static;
}

@end

void DeGreenrobotEventTestEventBusSubscriberLegalTest_Static_init(DeGreenrobotEventTestEventBusSubscriberLegalTest_Static *self) {
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusSubscriberLegalTest_Static *new_DeGreenrobotEventTestEventBusSubscriberLegalTest_Static_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusSubscriberLegalTest_Static, init)
}

DeGreenrobotEventTestEventBusSubscriberLegalTest_Static *create_DeGreenrobotEventTestEventBusSubscriberLegalTest_Static_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusSubscriberLegalTest_Static, init)
}

void DeGreenrobotEventTestEventBusSubscriberLegalTest_Static_onEventWithNSString_(NSString *event) {
  DeGreenrobotEventTestEventBusSubscriberLegalTest_Static_initialize();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusSubscriberLegalTest_Static)
