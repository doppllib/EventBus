//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "DeGreenrobotEventEventBus.h"
#include "DeGreenrobotEventEventBusBuilder.h"
#include "DeGreenrobotEventSubscriberExceptionEvent.h"
#include "DeGreenrobotEventTestAbstractEventBusTest.h"
#include "DeGreenrobotEventTestEventBusSubscriberExceptionTest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/annotation/Annotation.h"
#include "junit/framework/TestCase.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberExceptionTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberExceptionTest__Annotations$1();

@implementation DeGreenrobotEventTestEventBusSubscriberExceptionTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusSubscriberExceptionTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testSubscriberExceptionEvent {
  JreStrongAssign(&eventBus_, [((DeGreenrobotEventEventBusBuilder *) nil_chk([((DeGreenrobotEventEventBusBuilder *) nil_chk(DeGreenrobotEventEventBus_builder())) logSubscriberExceptionsWithBoolean:false])) build]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Foo"];
  [self assertEventCountWithInt:1];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(DeGreenrobotEventSubscriberExceptionEvent_class_(), [nil_chk(JreLoadVolatileId(&lastEvent_)) java_getClass]);
  DeGreenrobotEventSubscriberExceptionEvent *exEvent = (DeGreenrobotEventSubscriberExceptionEvent *) cast_chk(JreLoadVolatileId(&lastEvent_), [DeGreenrobotEventSubscriberExceptionEvent class]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(@"Foo", ((DeGreenrobotEventSubscriberExceptionEvent *) nil_chk(exEvent))->causingEvent_);
  JunitFrameworkTestCase_assertSameWithId_withId_(self, exEvent->causingSubscriber_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"Bar", [((NSException *) nil_chk(exEvent->throwable_)) getMessage]);
}

- (void)testBadExceptionSubscriber {
  JreStrongAssign(&eventBus_, [((DeGreenrobotEventEventBusBuilder *) nil_chk([((DeGreenrobotEventEventBusBuilder *) nil_chk(DeGreenrobotEventEventBus_builder())) logSubscriberExceptionsWithBoolean:false])) build]);
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:create_DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber_initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest_(self)];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Foo"];
  [self assertEventCountWithInt:1];
}

- (void)onEventWithNSString:(NSString *)event {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Bar");
}

- (void)onEventWithDeGreenrobotEventSubscriberExceptionEvent:(DeGreenrobotEventSubscriberExceptionEvent *)event {
  [self trackEventWithId:event];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, 1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testSubscriberExceptionEvent);
  methods[2].selector = @selector(testBadExceptionSubscriber);
  methods[3].selector = @selector(onEventWithNSString:);
  methods[4].selector = @selector(onEventWithDeGreenrobotEventSubscriberExceptionEvent:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { (void *)&DeGreenrobotEventTestEventBusSubscriberExceptionTest__Annotations$0, (void *)&DeGreenrobotEventTestEventBusSubscriberExceptionTest__Annotations$1, "onEvent", "LNSString;", "LDeGreenrobotEventSubscriberExceptionEvent;", "LDeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusSubscriberExceptionTest = { "EventBusSubscriberExceptionTest", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, 5, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusSubscriberExceptionTest;
}

@end

void DeGreenrobotEventTestEventBusSubscriberExceptionTest_init(DeGreenrobotEventTestEventBusSubscriberExceptionTest *self) {
  DeGreenrobotEventTestAbstractEventBusTest_init(self);
}

DeGreenrobotEventTestEventBusSubscriberExceptionTest *new_DeGreenrobotEventTestEventBusSubscriberExceptionTest_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusSubscriberExceptionTest, init)
}

DeGreenrobotEventTestEventBusSubscriberExceptionTest *create_DeGreenrobotEventTestEventBusSubscriberExceptionTest_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusSubscriberExceptionTest, init)
}

IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberExceptionTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusSubscriberExceptionTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusSubscriberExceptionTest)

@implementation DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber

- (instancetype)initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest:(DeGreenrobotEventTestEventBusSubscriberExceptionTest *)outer$ {
  DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber_initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest_(self, outer$);
  return self;
}

- (void)onEventWithDeGreenrobotEventSubscriberExceptionEvent:(DeGreenrobotEventSubscriberExceptionEvent *)event {
  @throw create_JavaLangRuntimeException_initWithNSString_(@"Bad");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest:);
  methods[1].selector = @selector(onEventWithDeGreenrobotEventSubscriberExceptionEvent:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onEvent", "LDeGreenrobotEventSubscriberExceptionEvent;", "LDeGreenrobotEventTestEventBusSubscriberExceptionTest;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber = { "BadExceptionSubscriber", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x0, 2, 0, 2, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber;
}

@end

void DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber_initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest_(DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber *self, DeGreenrobotEventTestEventBusSubscriberExceptionTest *outer$) {
  NSObject_init(self);
}

DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber *new_DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber_initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest_(DeGreenrobotEventTestEventBusSubscriberExceptionTest *outer$) {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber, initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest_, outer$)
}

DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber *create_DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber_initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest_(DeGreenrobotEventTestEventBusSubscriberExceptionTest *outer$) {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber, initWithDeGreenrobotEventTestEventBusSubscriberExceptionTest_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusSubscriberExceptionTest_BadExceptionSubscriber)
