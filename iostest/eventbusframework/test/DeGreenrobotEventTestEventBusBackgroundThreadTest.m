//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "AndroidOsLooper.h"
#include "DeGreenrobotEventEventBus.h"
#include "DeGreenrobotEventTestAbstractEventBusTest.h"
#include "DeGreenrobotEventTestEventBusBackgroundThreadTest.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Thread.h"
#include "java/lang/annotation/Annotation.h"
#include "junit/framework/TestCase.h"
#include "org/junit/Test.h"

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBackgroundThreadTest__Annotations$0();

__attribute__((unused)) static IOSObjectArray *DeGreenrobotEventTestEventBusBackgroundThreadTest__Annotations$1();

@implementation DeGreenrobotEventTestEventBusBackgroundThreadTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DeGreenrobotEventTestEventBusBackgroundThreadTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testPostInCurrentThread {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) postWithId:@"Hello"];
  [self waitForEventCountWithInt:1 withInt:1000];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(@"Hello", JreLoadVolatileId(&lastEvent_));
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaLangThread_currentThread(), JreLoadVolatileId(&lastThread_));
}

- (void)testPostFromMain {
  [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) register__WithId:self];
  [self postInMainThreadWithId:@"Hello"];
  [self waitForEventCountWithInt:1 withInt:1000];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(@"Hello", JreLoadVolatileId(&lastEvent_));
  JunitFrameworkTestCase_assertFalseWithBoolean_([((JavaLangThread *) nil_chk(JreLoadVolatileId(&lastThread_))) isEqual:JavaLangThread_currentThread()]);
  JunitFrameworkTestCase_assertFalseWithBoolean_([((JavaLangThread *) nil_chk(JreLoadVolatileId(&lastThread_))) isEqual:[((AndroidOsLooper *) nil_chk(AndroidOsLooper_getMainLooper())) getThread]]);
}

- (void)onEventBackgroundThreadWithNSString:(NSString *)event {
  [self trackEventWithId:event];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, 2, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testPostInCurrentThread);
  methods[2].selector = @selector(testPostFromMain);
  methods[3].selector = @selector(onEventBackgroundThreadWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangInterruptedException;", (void *)&DeGreenrobotEventTestEventBusBackgroundThreadTest__Annotations$0, (void *)&DeGreenrobotEventTestEventBusBackgroundThreadTest__Annotations$1, "onEventBackgroundThread", "LNSString;" };
  static const J2ObjcClassInfo _DeGreenrobotEventTestEventBusBackgroundThreadTest = { "EventBusBackgroundThreadTest", "de.greenrobot.event.test", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_DeGreenrobotEventTestEventBusBackgroundThreadTest;
}

@end

void DeGreenrobotEventTestEventBusBackgroundThreadTest_init(DeGreenrobotEventTestEventBusBackgroundThreadTest *self) {
  DeGreenrobotEventTestAbstractEventBusTest_init(self);
}

DeGreenrobotEventTestEventBusBackgroundThreadTest *new_DeGreenrobotEventTestEventBusBackgroundThreadTest_init() {
  J2OBJC_NEW_IMPL(DeGreenrobotEventTestEventBusBackgroundThreadTest, init)
}

DeGreenrobotEventTestEventBusBackgroundThreadTest *create_DeGreenrobotEventTestEventBusBackgroundThreadTest_init() {
  J2OBJC_CREATE_IMPL(DeGreenrobotEventTestEventBusBackgroundThreadTest, init)
}

IOSObjectArray *DeGreenrobotEventTestEventBusBackgroundThreadTest__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *DeGreenrobotEventTestEventBusBackgroundThreadTest__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_OrgJunitTest(OrgJunitTest_None_class_(), 0) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventTestEventBusBackgroundThreadTest)
