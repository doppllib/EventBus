//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DeGreenrobotEventTestEventBusMultithreadedTest")
#ifdef RESTRICT_DeGreenrobotEventTestEventBusMultithreadedTest
#define INCLUDE_ALL_DeGreenrobotEventTestEventBusMultithreadedTest 0
#else
#define INCLUDE_ALL_DeGreenrobotEventTestEventBusMultithreadedTest 1
#endif
#undef RESTRICT_DeGreenrobotEventTestEventBusMultithreadedTest

#if !defined (DeGreenrobotEventTestEventBusMultithreadedTest_) && (INCLUDE_ALL_DeGreenrobotEventTestEventBusMultithreadedTest || defined(INCLUDE_DeGreenrobotEventTestEventBusMultithreadedTest))
#define DeGreenrobotEventTestEventBusMultithreadedTest_

#define RESTRICT_DeGreenrobotEventTestAbstractEventBusTest 1
#define INCLUDE_DeGreenrobotEventTestAbstractEventBusTest 1
#include "DeGreenrobotEventTestAbstractEventBusTest.h"

@class DeGreenrobotEventTestIntTestEvent;
@class JavaLangInteger;

@interface DeGreenrobotEventTestEventBusMultithreadedTest : DeGreenrobotEventTestAbstractEventBusTest

#pragma mark Public

- (instancetype)init;

- (void)onEventWithId:(id)event;

- (void)onEventAsyncWithDeGreenrobotEventTestIntTestEvent:(DeGreenrobotEventTestIntTestEvent *)event;

- (void)onEventBackgroundThreadWithNSString:(NSString *)event;

- (void)onEventMainThreadWithJavaLangInteger:(JavaLangInteger *)event;

- (void)testPost01Thread;

- (void)testPost04Threads;

- (void)testPost40Threads;

- (void)testPostMixedEventType01Thread;

- (void)testPostMixedEventType04Threads;

- (void)testPostMixedEventType40Threads;

- (void)testSubscribeUnSubscribeAndPostMixedEventType;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusMultithreadedTest)

FOUNDATION_EXPORT void DeGreenrobotEventTestEventBusMultithreadedTest_init(DeGreenrobotEventTestEventBusMultithreadedTest *self);

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusMultithreadedTest *new_DeGreenrobotEventTestEventBusMultithreadedTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusMultithreadedTest *create_DeGreenrobotEventTestEventBusMultithreadedTest_init();

J2OBJC_TYPE_LITERAL_HEADER(DeGreenrobotEventTestEventBusMultithreadedTest)

#endif

#if !defined (DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread_) && (INCLUDE_ALL_DeGreenrobotEventTestEventBusMultithreadedTest || defined(INCLUDE_DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread))
#define DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread_

#define RESTRICT_JavaLangThread 1
#define INCLUDE_JavaLangThread 1
#include "java/lang/Thread.h"

@class DeGreenrobotEventTestEventBusMultithreadedTest;
@class JavaUtilConcurrentCountDownLatch;

@interface DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread : JavaLangThread

#pragma mark Public

- (instancetype)initWithDeGreenrobotEventTestEventBusMultithreadedTest:(DeGreenrobotEventTestEventBusMultithreadedTest *)outer$
                                  withJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)latch
                                                               withInt:(jint)iterations
                                                                withId:(id)eventToPost;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread)

FOUNDATION_EXPORT void DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread_initWithDeGreenrobotEventTestEventBusMultithreadedTest_withJavaUtilConcurrentCountDownLatch_withInt_withId_(DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread *self, DeGreenrobotEventTestEventBusMultithreadedTest *outer$, JavaUtilConcurrentCountDownLatch *latch, jint iterations, id eventToPost);

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread *new_DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread_initWithDeGreenrobotEventTestEventBusMultithreadedTest_withJavaUtilConcurrentCountDownLatch_withInt_withId_(DeGreenrobotEventTestEventBusMultithreadedTest *outer$, JavaUtilConcurrentCountDownLatch *latch, jint iterations, id eventToPost) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread *create_DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread_initWithDeGreenrobotEventTestEventBusMultithreadedTest_withJavaUtilConcurrentCountDownLatch_withInt_withId_(DeGreenrobotEventTestEventBusMultithreadedTest *outer$, JavaUtilConcurrentCountDownLatch *latch, jint iterations, id eventToPost);

J2OBJC_TYPE_LITERAL_HEADER(DeGreenrobotEventTestEventBusMultithreadedTest_PosterThread)

#endif

#if !defined (DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread_) && (INCLUDE_ALL_DeGreenrobotEventTestEventBusMultithreadedTest || defined(INCLUDE_DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread))
#define DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread_

#define RESTRICT_JavaLangThread 1
#define INCLUDE_JavaLangThread 1
#include "java/lang/Thread.h"

@class DeGreenrobotEventTestEventBusMultithreadedTest;
@class JavaLangInteger;

@interface DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread : JavaLangThread {
 @public
  jboolean running_;
}

#pragma mark Public

- (void)onEventWithId:(id)event;

- (void)onEventAsyncWithId:(id)event;

- (void)onEventBackgroundThreadWithJavaLangInteger:(JavaLangInteger *)event;

- (void)onEventMainThreadWithNSString:(NSString *)event;

- (void)run;

- (void)shutdown;

#pragma mark Package-Private

- (instancetype)initWithDeGreenrobotEventTestEventBusMultithreadedTest:(DeGreenrobotEventTestEventBusMultithreadedTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread)

FOUNDATION_EXPORT void DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread_initWithDeGreenrobotEventTestEventBusMultithreadedTest_(DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread *self, DeGreenrobotEventTestEventBusMultithreadedTest *outer$);

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread *new_DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread_initWithDeGreenrobotEventTestEventBusMultithreadedTest_(DeGreenrobotEventTestEventBusMultithreadedTest *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread *create_DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread_initWithDeGreenrobotEventTestEventBusMultithreadedTest_(DeGreenrobotEventTestEventBusMultithreadedTest *outer$);

J2OBJC_TYPE_LITERAL_HEADER(DeGreenrobotEventTestEventBusMultithreadedTest_SubscribeUnsubscribeThread)

#endif

#pragma pop_macro("INCLUDE_ALL_DeGreenrobotEventTestEventBusMultithreadedTest")
