//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DeGreenrobotEventTestEventBusRegistrationRacingTest")
#ifdef RESTRICT_DeGreenrobotEventTestEventBusRegistrationRacingTest
#define INCLUDE_ALL_DeGreenrobotEventTestEventBusRegistrationRacingTest 0
#else
#define INCLUDE_ALL_DeGreenrobotEventTestEventBusRegistrationRacingTest 1
#endif
#undef RESTRICT_DeGreenrobotEventTestEventBusRegistrationRacingTest

#if !defined (DeGreenrobotEventTestEventBusRegistrationRacingTest_) && (INCLUDE_ALL_DeGreenrobotEventTestEventBusRegistrationRacingTest || defined(INCLUDE_DeGreenrobotEventTestEventBusRegistrationRacingTest))
#define DeGreenrobotEventTestEventBusRegistrationRacingTest_

#define RESTRICT_DeGreenrobotEventTestAbstractEventBusTest 1
#define INCLUDE_DeGreenrobotEventTestAbstractEventBusTest 1
#include "DeGreenrobotEventTestAbstractEventBusTest.h"

@class JavaUtilConcurrentCountDownLatch;
@protocol JavaUtilConcurrentExecutor;

@interface DeGreenrobotEventTestEventBusRegistrationRacingTest : DeGreenrobotEventTestAbstractEventBusTest {
 @public
  volatile_id startLatch_;
  volatile_id registeredLatch_;
  volatile_id canUnregisterLatch_;
  volatile_id unregisteredLatch_;
  id<JavaUtilConcurrentExecutor> threadPool_;
}

#pragma mark Public

- (instancetype)init;

- (void)testRacingRegistrations;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusRegistrationRacingTest)

J2OBJC_VOLATILE_FIELD_SETTER(DeGreenrobotEventTestEventBusRegistrationRacingTest, startLatch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_VOLATILE_FIELD_SETTER(DeGreenrobotEventTestEventBusRegistrationRacingTest, registeredLatch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_VOLATILE_FIELD_SETTER(DeGreenrobotEventTestEventBusRegistrationRacingTest, canUnregisterLatch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_VOLATILE_FIELD_SETTER(DeGreenrobotEventTestEventBusRegistrationRacingTest, unregisteredLatch_, JavaUtilConcurrentCountDownLatch *)
J2OBJC_FIELD_SETTER(DeGreenrobotEventTestEventBusRegistrationRacingTest, threadPool_, id<JavaUtilConcurrentExecutor>)

FOUNDATION_EXPORT void DeGreenrobotEventTestEventBusRegistrationRacingTest_init(DeGreenrobotEventTestEventBusRegistrationRacingTest *self);

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusRegistrationRacingTest *new_DeGreenrobotEventTestEventBusRegistrationRacingTest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusRegistrationRacingTest *create_DeGreenrobotEventTestEventBusRegistrationRacingTest_init();

J2OBJC_TYPE_LITERAL_HEADER(DeGreenrobotEventTestEventBusRegistrationRacingTest)

#endif

#if !defined (DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread_) && (INCLUDE_ALL_DeGreenrobotEventTestEventBusRegistrationRacingTest || defined(INCLUDE_DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread))
#define DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class DeGreenrobotEventTestEventBusRegistrationRacingTest;

@interface DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread : NSObject < JavaLangRunnable > {
 @public
  volatile_jint eventCount_;
}

#pragma mark Public

- (void)onEventWithNSString:(NSString *)event;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithDeGreenrobotEventTestEventBusRegistrationRacingTest:(DeGreenrobotEventTestEventBusRegistrationRacingTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread)

FOUNDATION_EXPORT void DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread_initWithDeGreenrobotEventTestEventBusRegistrationRacingTest_(DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread *self, DeGreenrobotEventTestEventBusRegistrationRacingTest *outer$);

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread *new_DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread_initWithDeGreenrobotEventTestEventBusRegistrationRacingTest_(DeGreenrobotEventTestEventBusRegistrationRacingTest *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread *create_DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread_initWithDeGreenrobotEventTestEventBusRegistrationRacingTest_(DeGreenrobotEventTestEventBusRegistrationRacingTest *outer$);

J2OBJC_TYPE_LITERAL_HEADER(DeGreenrobotEventTestEventBusRegistrationRacingTest_SubscriberThread)

#endif

#pragma pop_macro("INCLUDE_ALL_DeGreenrobotEventTestEventBusRegistrationRacingTest")
